{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/features/habit/habitAPI.ts"],"sourcesContent":["export const fetchHabits = async () => {\r\n    const response = await fetch(\"http://localhost:3001/api/habits\");\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to fetch habits\");\r\n    }\r\n    return response.json();\r\n};"],"names":[],"mappings":";;;AAAO,MAAM,cAAc;IACvB,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,SAAS,IAAI;AACxB","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/features/habit/habitSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchHabits } from \"./habitAPI\";\r\n\r\ntype Habit = {\r\n    _id: string;\r\n    title: string;\r\n    description: string;\r\n    createAt: string;\r\n    days: number;\r\n    lastDone: Date;\r\n    lastUpdate: Date;\r\n    startedAt: Date;\r\n};\r\n\r\ntype HabitState = {\r\n    habits: Habit [];\r\n    status: Record<string, \"idle\" | \"loading\" | \"success\" | \"failed\">;\r\n    error: Record<string, string | null>;\r\n};\r\n\r\nconst initialState: HabitState = {\r\n    habits: [],\r\n    status: {},\r\n    error: {}\r\n};\r\n\r\nexport const fetchHabitsThunk = createAsyncThunk(\"habit/fetchHabits\", async () => {\r\n        return await fetchHabits();\r\n});\r\n\r\nexport const markAsDoneThunk = createAsyncThunk(\"habit/markAsDone\", async (_id: string, {rejectWithValue}) => {\r\n    const response = await fetch(`http://localhost:3001/api/habits/markasdone${_id}/done`, {\r\n        method: \"POST\",\r\n    });\r\n    const responseJson = await response.json();\r\n    if (!response.ok) {\r\n        return rejectWithValue(\"Fallo al marcar como hecho\");\r\n    }else if (responseJson.message.toString() === \"Habito reiniciado\") {\r\n        return rejectWithValue(responseJson.message);\r\n    }else{\r\n        return responseJson;\r\n    }\r\n});\r\n\r\n\r\nconst habitSlice = createSlice ({\r\n    name: \"habit\",\r\n    initialState,\r\n    reducers: {\r\n        addHabits: (state, action) => {\r\n            state.habits = action.payload;\r\n        },\r\n\r\n\r\n        addHabit: (state, action) => {\r\n            state.habits.push(action.payload);\r\n        },\r\n\r\n        removeHabit: (state, action) => {\r\n            state.habits = state.habits.filter(habit => habit._id !== action.payload);\r\n        }\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchHabitsThunk.fulfilled, (state, action) => {\r\n            state.habits =Array.isArray (action.payload) ? action.payload : [];\r\n        }).addCase(markAsDoneThunk.fulfilled, (state, action) => {\r\n            const habitId = action.meta.arg;\r\n             if (!state.status[habitId]) {\r\n                 state.status[habitId] = \"idle\"; // Establecer un valor predeterminado\r\n             }\r\n            state.status[action.meta.arg] = \"success\";\r\n            state.error[action.meta.arg] = null;\r\n        }).addCase(markAsDoneThunk.rejected, (state, action) => {\r\n            if (!state.status[habitId]) {\r\n                state.status[habitId] = \"idle\"; // Establecer un valor predeterminado\r\n            }\r\n            state.status[action.meta.arg] = \"failed\";\r\n            state.error[action.meta.arg] = action.payload as string;\r\n        });\r\n    }\r\n});\r\n\r\nexport const { addHabits, addHabit, removeHabit } = habitSlice.actions;\r\nexport default habitSlice.reducer;"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAmBA,MAAM,eAA2B;IAC7B,QAAQ,EAAE;IACV,QAAQ,CAAC;IACT,OAAO,CAAC;AACZ;AAEO,MAAM,mBAAmB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAAE,qBAAqB;IAC9D,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD;AAC/B;AAEO,MAAM,kBAAkB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB,OAAO,KAAa,EAAC,eAAe,EAAC;IACrG,MAAM,WAAW,MAAM,MAAM,CAAC,2CAA2C,EAAE,IAAI,KAAK,CAAC,EAAE;QACnF,QAAQ;IACZ;IACA,MAAM,eAAe,MAAM,SAAS,IAAI;IACxC,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,OAAO,gBAAgB;IAC3B,OAAM,IAAI,aAAa,OAAO,CAAC,QAAQ,OAAO,qBAAqB;QAC/D,OAAO,gBAAgB,aAAa,OAAO;IAC/C,OAAK;QACD,OAAO;IACX;AACJ;AAGA,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAG;IAC5B,MAAM;IACN;IACA,UAAU;QACN,WAAW,CAAC,OAAO;YACf,MAAM,MAAM,GAAG,OAAO,OAAO;QACjC;QAGA,UAAU,CAAC,OAAO;YACd,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,OAAO;QACpC;QAEA,aAAa,CAAC,OAAO;YACjB,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,GAAG,KAAK,OAAO,OAAO;QAC5E;IACJ;IAEA,eAAe,CAAC;QACZ,QAAQ,OAAO,CAAC,iBAAiB,SAAS,EAAE,CAAC,OAAO;YAChD,MAAM,MAAM,GAAE,MAAM,OAAO,CAAE,OAAO,OAAO,IAAI,OAAO,OAAO,GAAG,EAAE;QACtE,GAAG,OAAO,CAAC,gBAAgB,SAAS,EAAE,CAAC,OAAO;YAC1C,MAAM,WAAU,OAAO,IAAI,CAAC,GAAG;YAC9B,IAAI,CAAC,MAAM,MAAM,CAAC,SAAQ,EAAE;gBACxB,MAAM,MAAM,CAAC,SAAQ,GAAG,QAAQ,qCAAqC;YACzE;YACD,MAAM,MAAM,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;YAChC,MAAM,KAAK,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;QACnC,GAAG,OAAO,CAAC,gBAAgB,QAAQ,EAAE,CAAC,OAAO;YACzC,IAAI,CAAC,MAAM,MAAM,CAAC,QAAQ,EAAE;gBACxB,MAAM,MAAM,CAAC,QAAQ,GAAG,QAAQ,qCAAqC;YACzE;YACA,MAAM,MAAM,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;YAChC,MAAM,KAAK,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,OAAO;QACjD;IACJ;AACJ;AAEO,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,WAAW,OAAO;uCACvD,WAAW,OAAO","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/Redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport habitReducer from \"../features/habit/habitSlice\";\r\n\r\n\r\nexport const makeStore = () => { \r\n    return configureStore ({\r\n        reducer: {\r\n            habit:habitReducer,\r\n        },    \r\n    })\r\n};\r\n\r\nexport type AppStore = ReturnType<typeof makeStore>;\r\nexport type AppState = ReturnType<AppStore[\"getState\"]>;\r\nexport type AppDispatch = AppStore [\"dispatch\"];"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,MAAM,YAAY;IACrB,OAAO,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAG;QACnB,SAAS;YACL,OAAM,kIAAA,CAAA,UAAY;QACtB;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/app/StoreProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRef } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppStore, makeStore } from '../Redux/store';\r\n\r\nexport default function StoreProvider ({children}:{children: React.ReactNode}) {\r\n    const store = useRef<AppStore | null>(null);\r\n    if (!store.current) {\r\n        store.current = makeStore ();\r\n    }\r\n    return <Provider store={store.current}>{children}</Provider>;\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,cAAe,EAAC,QAAQ,EAA6B;;IACzE,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAmB;IACtC,IAAI,CAAC,MAAM,OAAO,EAAE;QAChB,MAAM,OAAO,GAAG,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD;IAC5B;IACA,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,MAAM,OAAO;kBAAG;;;;;;AAC5C;GANwB;KAAA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}