{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/features/habit/habitSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\ntype Habit = {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    createAt: string;\r\n};\r\n\r\ntype HabitState = {\r\n    habits: Habit [];\r\n};\r\n\r\nconst initialState: HabitState = {\r\n    habits: []\r\n};\r\n\r\nexport const fetchHabitsThunk = createAsyncThunk(\r\n    \"habit/fetchHabits\",\r\n    async () => {\r\n        const response = await fetch(\"/api/habits\");\r\n        return response.json();\r\n    }\r\n);\r\n\r\n\r\nconst habitSlice = createSlice ({\r\n    name: \"habit\",\r\n    initialState,\r\n    reducers: {\r\n        addHabits: (state, action) => {\r\n            state.habits = action.payload;\r\n        },\r\n\r\n\r\n        addHabit: (state, action) => {\r\n            state.habits.push(action.payload);\r\n        },\r\n\r\n        removeHabit: (state, action) => {\r\n            state.habits = state.habits.filter(habit => habit.id !== action.payload);\r\n        }\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchHabitsThunk.fulfilled, (state, action) => {\r\n            state.habits = action.payload;\r\n        });\r\n    }\r\n});\r\n\r\nexport const { addHabits, addHabit, removeHabit } = habitSlice.actions;\r\nexport default habitSlice.reducer;"],"names":[],"mappings":";;;;;;;AAAA;;AAaA,MAAM,eAA2B;IAC7B,QAAQ,EAAE;AACd;AAEO,MAAM,mBAAmB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAC3C,qBACA;IACI,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO,SAAS,IAAI;AACxB;AAIJ,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAG;IAC5B,MAAM;IACN;IACA,UAAU;QACN,WAAW,CAAC,OAAO;YACf,MAAM,MAAM,GAAG,OAAO,OAAO;QACjC;QAGA,UAAU,CAAC,OAAO;YACd,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,OAAO;QACpC;QAEA,aAAa,CAAC,OAAO;YACjB,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK,OAAO,OAAO;QAC3E;IACJ;IAEA,eAAe,CAAC;QACZ,QAAQ,OAAO,CAAC,iBAAiB,SAAS,EAAE,CAAC,OAAO;YAChD,MAAM,MAAM,GAAG,OAAO,OAAO;QACjC;IACJ;AACJ;AAEO,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,WAAW,OAAO;uCACvD,WAAW,OAAO","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/Redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport habitReducer from \"../features/habit/habitSlice\";\r\n\r\n\r\nexport const makeStore = () => { \r\n    return configureStore ({\r\n        reducer: {\r\n            habit:habitReducer,\r\n        },    \r\n    })\r\n};\r\n\r\nexport type AppStore = ReturnType<typeof makeStore>;\r\nexport type AppState = ReturnType<AppStore[\"getState\"]>;\r\nexport type AppDispatch = AppStore [\"dispatch\"];"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,MAAM,YAAY;IACrB,OAAO,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAG;QACnB,SAAS;YACL,OAAM,kIAAA,CAAA,UAAY;QACtB;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mady7/habits-tracker/app/StoreProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRef } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppStore, makeStore } from '../Redux/store';\r\n\r\nexport default function StoreProvider ({children}:{children: React.ReactNode}) {\r\n    const store = useRef<AppStore | null>(null);\r\n    if (!store.current) {\r\n        store.current = makeStore ();\r\n    }\r\n    return <Provider store={store.current}>{children}</Provider>;\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,cAAe,EAAC,QAAQ,EAA6B;;IACzE,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAmB;IACtC,IAAI,CAAC,MAAM,OAAO,EAAE;QAChB,MAAM,OAAO,GAAG,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD;IAC5B;IACA,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,MAAM,OAAO;kBAAG;;;;;;AAC5C;GANwB;KAAA","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}